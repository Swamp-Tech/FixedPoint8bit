#ifndef MACROS_H
#define MACROS_H

#include <stdint.h>

// Вычисляет абсолютную разницу чисел
#define ABS(x) ((x) < 0 ? -(x) : (x))
// Минимум из двух чисел
#define MIN(a, b) ((a) < (b) ? (a) : (b))  
// Максимум из двух чисел
#define MAX(a, b) ((a) > (b) ? (a) : (b))  

// Меняет местами два числа
// Типы переменных должны совпадать
#define SWAP(x,y, TEMP) \
                    TEMP = x; \
                    x = y; \
                    y = TEMP 

// Возвращает адрес первого байта числа любого типа
// Позволяет обращаться к байтам многобайтовых чисел через []
#define GET_BYTE(X) ((uint8_t*)(&X)) 

//
// Битовые макросы
//

// Установить n-й бит в 1
#define SET_BIT(x, n) ((x) |= (1 << (n))) 
// Сбросить n-й бит в 0
#define RESET_BIT(x, n) ((x) &= ~(1 << (n))) 
// Переключает n-й бит на противоположное значение (0->1 или 1->0)
#define TOGGLE_BIT(x, n) ((x) ^= (1 << (n)))  
// Проверить, установлен ли n-й бит
#define IS_BIT_SET(x, n) ((x) & (1 << (n)))
// Проверяет сброшен ли n-й бит
#define IS_BIT_RESET(x, n) ( !((x) & (1 << (n))) ) 

#endif